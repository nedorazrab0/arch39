#!/usr/bin/env bash
#
# Make a screenshot
set -e

usage() {
  echo "usage: ${0##*/} [-h] [-w] [-p]"
  echo
  echo 'screenshot making script'
  echo
  echo 'options:'
  echo '  -h  show this help message and exit'
  echo '  -w  make a screenshot of the active window'
  echo '  -p  make a partial screenshot of the selected region'

  exit "${1}"
}

get_data() {
  local data="${1}"
  local exp="${2}"

  echo "${data}" | grep ".${exp}." | cut -d ' ' -f2
}

window_ss() {
  local window_data
  local class
  local size
  local at

  command -v hyprctl > /dev/null || partial_ss
  window_data="$(hyprctl activewindow)"
  class="$(get_data "${window_data}" 'class:')"
  size="$(get_data "${window_data}" 'size:' | sed 's/,/x/')"
  at="$(get_data "${window_data}" 'at:')"

  screenshot "${at}" "${size}" "$(date +%s)-${class}"
}

partial_ss() {
  screenshot $(slurp) "$(date +%s)-part"
}

screenshot() {
  local at="${1}"
  local size="${2}"
  local filename="${3}"

  grim -g "${at} ${size}" -t png -l9 \
    "$(xdg-user-dir PICTURES)/${filename}.png"
}

check_command() {
  local command="${1}"
  if ! command -v "${command}" > /dev/null; then
    echo "! ${command} command missing" >&2
    exit 1
  fi
}

main() {
  check_command grim
  check_command slurp

  ((${#} == 0)) && usage 1 >&2
  case "${@}" in
    -w) window_ss ;;
    -p) partial_ss ;;
    -h) usage 0 ;;
    *) usage 1 >&2
  esac
}

main "${@}"
