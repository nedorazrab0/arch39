#!/usr/bin/env bash
#
# Make a screenshot
set -e

usage() {
  echo "usage: ${0##*/} [-h] [-w] [-p]"
  echo
  echo 'screenshot making script'
  echo
  echo 'options:'
  echo '  -h  show this help message and exit'
  echo '  -w  make a screenshot of the active window'
  echo '  -p  make a partial screenshot of the selected region'

  exit "${1}"
}

getsortnum() {
  # Newer files will be higher in the list when sorted by name
  local maxtime=12147483646
  local curtime
  local curtime="$(date +%s)"

  echo "$((maxtime - curtime))"
}

screenshot() {
  local at="${1}"
  local size="${2}"
  local class="${3}"

  local sortnum
  sortnum="$(getsortnum)"

  grim -g "${at} ${size}" -t png -l0 -- - | cwebp -lossless -q 100 -z 9 -mt \
    -o "$(xdg-user-dir PICTURES)/${sortnum}-${class}.webp" \
    -sharp_yuv -noalpha -quiet -- -
}

check_command() {
  local command="${1}"
  if ! command -v "${command}" > /dev/null; then
    echo "! ${command} command missing" >&2
    exit 1
  fi
}

partial_ss() {
  hyprpicker -rzq &
  sleep 0.1
  screenshot $(slurp -b 33ccbb90 -w0) part
  killall hyprpicker
}

get_data() {
  local data="${1}"
  local exp="${2}"

  echo "${data}" | grep ".${exp}." | cut -d ' ' -f2
}

window_ss() {
  local window_data
  local class
  local size
  local at

  command -v hyprctl > /dev/null || partial_ss
  window_data="$(hyprctl activewindow)"
  class="$(get_data "${window_data}" 'class:')"
  size="$(get_data "${window_data}" 'size:' | sed 's/,/x/')"
  at="$(get_data "${window_data}" 'at:')"

  screenshot "${at}" "${size}" "${class}"
}

main() {
  check_command grim
  check_command slurp
  check_command hyprpicker

  ((${#} == 0)) && usage 1 >&2
  case "${@}" in
    -w) window_ss ;;
    -p) partial_ss ;;
    -h) usage 0 ;;
    *) usage 1 >&2
  esac
}

main "${@}"
