#!/usr/bin/env bash
#
# Flatpak helper
set -e

local_search() {
  local num="${1}"

  local result
  result="$(flatpak list --app --columns=application)"

  if [[ -n "${num}" ]]; then
    echo "${result}" | sed -n "${num}p"
  else
    echo "${result}" | nl
  fi
}

remote_search() {
  local req="${1}"
  local num="${2}"

  local result
  result="$(flatpak search "${req}" --columns=application)"

  if [[ -n "${num}" ]]; then
    echo "${result}" | sed -n "${num}p"
  else
    echo "${result}" | nl
  fi
}

usage() {
  echo "usage: ${0##*/} [-h] [-s REQ] [-n NUM] [-i] [-x] [-p] [-r]"
  echo '  [-o APP_OPT] [-l] [-u] [-k]'
  echo
  echo 'flatpak helper'
  echo
  echo 'options:'
  echo '  -h          show this help message and exit'
  echo '  -s REQ      search request'
  echo '  -n NUM      specify app num'
  echo '  -i          install an app'
  echo '  -x          uninstall an app'
  echo '  -p          uninstall unused'
  echo '  -r          run an app'
  echo '  -o APP_OPT  specify app opts'
  echo '  -l          show local app list'
  echo '  -u          update apps'
  echo '  -k          kill an app'

  exit "${1}"
}

main() {
  local OPTARG
  local arg

  # Parse args
  [[ -z "${@}" ]] && usage 1
  while getopts 'hn:s:o:ixprukl' arg; do
    case "${arg}" in
      s)
        local cmd="${arg}"
        local req="${OPTARG}"
        ;;
      o) local app_opt="${OPTARG}" ;;
      n) local num="${OPTARG}" ;;
      i) local cmd="${arg}" ;;
      x) local cmd="${arg}" ;;
      p) local cmd="${arg}" ;;
      r) local cmd="${arg}" ;;
      s) local cmd="${arg}" ;;
      l) local cmd="${arg}" ;;
      u) local cmd="${arg}" ;;
      k) local cmd="${arg}" ;;
      h) usage 0 ;;
      *) usage 1 ;;
    esac
  done

  local f='--noninteractive'
  case "${cmd}" in
    i) flatpak install flathub "$(remote_search ${req} ${num})" "${f}" ;;
    x) flatpak uninstall "$(local_search ${num})" --delete-data "${f}" ;;
    p) flatpak uninstall --unused --delete-data "${f}" ;;
    u) flatpak update "${f}" ;;
    r) flatpak run "$(local_search ${num})" ${app_opt} ;;
    k) flatpak kill "$(local_search ${num})" ;;
    s) remote_search "${req}" ;;
    l) local_search ;;
  esac
}

main "${@}"
